% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/redcap.R
\name{tar_redcap}
\alias{tar_redcap}
\title{Create dynamic REDCap targets for a \code{targets} pipeline}
\usage{
tar_redcap(
  name,
  con,
  mode = c("logging", "always", "thorough", "never"),
  fetch_records = redcap_fetch_records,
  instruments = NULL,
  ...
)
}
\arguments{
\item{name}{Symbol. A name stem for the REDCap targets (e.g., \code{redcap} will
generate \code{redcap_meta_db} and one target per instrument prefixed with \code{redcap_}).}

\item{con}{A \code{redcapAPI::redcapConnection} object.}

\item{mode}{Character string indicating how target invalidation should occur:
\itemize{
\item \code{"logging"}: re-run only when REDCap logs show changes (requires user access to logs).
\item \code{"always"}: always re-run REDCap pulls regardless of changes.
\item \code{"thorough"}: default \code{targets} invalidation (based on dependencies and metadata).
\item \code{"never"}: never re-run unless missing or errored previously.
}}

\item{fetch_records}{A function used to fetch records for each REDCap form.
Must accept arguments \code{con} and \code{forms}, along with additional optional
arguments via \code{...}. Defaults to \code{\link[=redcap_fetch_records]{redcap_fetch_records()}}.}

\item{instruments}{Optional character vector of instrument (form) names to fetch from REDCap.
If \code{NULL} (default), all available instruments will be fetched using \code{\link[=fetch_redcap_instruments]{fetch_redcap_instruments()}}.
If supplied, the values must be valid instrument names present in the REDCap project. This allows
selective fetching of only a subset of forms.}

\item{...}{Additional arguments passed to \code{fetch_records}, such as
\code{batch_size}, \code{drop_fields}, or label formatting options.}
}
\value{
A list of \code{tar_target()} and \code{tar_map()} objects, including:
\itemize{
\item \verb{<name>_meta_db}: a target for REDCap metadata.
\item One dynamic target per REDCap instrument, each named \verb{<name>_<instrument>}.
}
}
\description{
\code{tar_redcap()} builds a set of dynamic \code{targets} to pull REDCap metadata and
form-level data using the \code{redcapAPI} backend. It supports dynamic branching
across all instruments and offers flexible control over when data is re-fetched
via \code{cue} behavior (e.g., logging-based updates, always re-fetching, or
never rerunning unless missing).
}
\examples{
\dontrun{
tar_redcap(
  name = redcap,
  con = redcap_con,
  mode = "logging",
  batch_size = 1000
)

# Custom record fetcher example:
custom_fetch <- function(con, forms, ...) {
  redcapAPI::exportRecords(con, forms = forms, labels = TRUE, ...)
}

tar_redcap(
  name = redcap,
  con = redcap_con,
  mode = "always",
  fetch_records = custom_fetch
)
}

}
