[{"path":"https://overdodactyl.github.io/redcaptargets/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Pat Johnson Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/articles/cues.html","id":"re-pull-triggers-in-redcaptargets","dir":"Articles","previous_headings":"","what":"Re-Pull Triggers in redcaptargets","title":"Target Cues","text":"cue argument tar_redcap() controls data re-pulled REDCap. Supported options include \"logging\" (default), \"always\", \"thorough\", \"never\".","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/articles/cues.html","id":"logging-default","dir":"Articles","previous_headings":"Re-Pull Triggers in redcaptargets","what":"Logging (default)","title":"Target Cues","text":"cue = \"logging\", tar_redcap() inspects REDCap project logs re-pulls data meaningful changes detected—new modified records (instruments) changes project structure (metadata). Note: behavior requires log export permissions REDCap project. API token access project logs, cue method fail. Using logs helps avoid unnecessary data pulls can significantly speed pipelines small- medium-sized projects. redcaptargets fetches REDCap project logs last successful tar_make() run current time, determines whether relevant changes occurred. However, large projects long histories frequent activity, exporting logs large time windows can become slow. cases, consider using different cue strategy.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/articles/cues.html","id":"timezone-handeling","dir":"Articles","previous_headings":"Re-Pull Triggers in redcaptargets > Logging (default)","what":"Timezone Handeling","title":"Target Cues","text":"default, redcaptargets assumes REDCap server timezone local system. REDCap instance hosted different timezone, can specify globally using option redcaptargets.redcap_tz, e.g.: ensures timestamps passed REDCap API interpreted correctly, REDCap support timezone-aware inputs.","code":"options(redcaptargets.redcap_tz = \"America/New_York\")"},{"path":"https://overdodactyl.github.io/redcaptargets/articles/cues.html","id":"always","dir":"Articles","previous_headings":"Re-Pull Triggers in redcaptargets","what":"Always","title":"Target Cues","text":"Setting cue = \"always\" tells tar_redcap() re-pull data REDCap every time pipeline runs, regardless whether changes made. mode useful : expect frequent updates data want guarantee freshness log export permissions REDCap ’re early stages development want avoid stale data REDCap project small, full re-pull faster parsing project logs small moderate REDCap projects, strategy can actually efficient using logging-based trigger. However, larger studies, may lead longer run times unnecessary server load.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/articles/cues.html","id":"thorough","dir":"Articles","previous_headings":"Re-Pull Triggers in redcaptargets","what":"Thorough","title":"Target Cues","text":"Using cue = “thorough” applies default targets invalidation rules. mode, REDCap data re-pulled tracked input changes. includes: Changes instrument_names argument (e.g., new instrument added). Changes code used fetch REDCap instrument metadata. Changes custom functions global objects used within call tar_redcap(). mode inspect REDCap logs. result, updates REDCap database (new records edited fields) trigger re-pull unless one tracked R-side inputs changes. Use cue = “thorough” want pipeline reactive R-side changes, need automatic detection data changes REDCap side.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/articles/cues.html","id":"never","dir":"Articles","previous_headings":"Re-Pull Triggers in redcaptargets","what":"Never","title":"Target Cues","text":"Use cue = “never” want REDCap data never re-pulled, regardless changes code, inputs, REDCap database . mode disables automatic invalidation cues targets pipeline, except two cases: target never run (.e., metadata exists). target’s last run errored. target run successfully, re-run—even : REDCap connection changes New instruments added Fields records modified REDCap pipeline code edited","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/articles/cues.html","id":"when-to-use","dir":"Articles","previous_headings":"Re-Pull Triggers in redcaptargets > Never","what":"When to use","title":"Target Cues","text":"mode useful : Projects rely frozen snapshot REDCap data Environments want maximum reproducibility accidental data changes Pipelines run restricted production environments data pulls must tightly controlled need manually re-run target mode, use targets::tar_invalidate(). example:","code":"targets::tar_invalidate(redcap_metadata) targets::tar_invalidate(redcap_instrument_a)"},{"path":[]},{"path":"https://overdodactyl.github.io/redcaptargets/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pat Johnson. Author, maintainer.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johnson P (2025). redcaptargets: Targets REDCap Workflows. R package version 0.0.1, https://overdodactyl.github.io/redcaptargets/.","code":"@Manual{,   title = {redcaptargets: Targets for REDCap Workflows},   author = {Pat Johnson},   year = {2025},   note = {R package version 0.0.1},   url = {https://overdodactyl.github.io/redcaptargets/}, }"},{"path":"https://overdodactyl.github.io/redcaptargets/index.html","id":"redcaptargets-","dir":"","previous_headings":"","what":"Targets for REDCap Workflows","title":"Targets for REDCap Workflows","text":"redcaptargets integrates REDCap databases targets pipeline toolkit streamline reproducible clinical research workflows. leverages redcapAPI package connect REDCap automatically generates dynamic targets metadata instrument-level data. leveraging REDCap logging, redcaptargets detects meaningful changes re-pulls data needed, minimizing compute time ensuring local copies remain date. Modular factory functions minimize boilerplate adapt seamlessly evolving study designs.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Targets for REDCap Workflows","text":"REDCap doesn’t support SQL-like queries, users often resort pulling data across instruments workspace analysis. leads slow, repetitive code, especially longitudinal studies : New participants enroll continuously Forms surveys evolve Analyses need frequent refreshes redcaptargets simplifies integrating REDCap targets pipeline toolkit: Automatically detects meaningful changes via REDCap logs Dynamically creates targets instrument metadata Skips unnecessary pulls save time compute Enables modular, reproducible workflows built-caching via gittargets","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Targets for REDCap Workflows","text":"example shows use tar_redcap()—main function redcaptargets—pull REDCap instruments metadata targets pipeline.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/index.html","id":"id__targetsr-minimal-example","dir":"","previous_headings":"Example","what":"_targets.R: Minimal example","title":"Targets for REDCap Workflows","text":"","code":"library(targets) library(redcaptargets)  # Establish REDCap Connection redcap_con <- redcapAPI::redcapConnection(   url = Sys.getenv(\"REDCAP_URL\"),   token = Sys.getenv(\"REDCAP_INTERNAL_82203\") )  # Source functions in R/ directory tar_source()  # Targets pipeline list(   tar_redcap(redcap, redcap_con),   tar_target(     n_enrolled,     command = nrow(redcap_demographics),     description = \"Enrollment Count\"   ) )"},{"path":"https://overdodactyl.github.io/redcaptargets/index.html","id":"trigger-the-pipeline","dir":"","previous_headings":"Example","what":"Trigger the pipeline","title":"Targets for REDCap Workflows","text":"","code":"targets::tar_make() #> + redcap_visits dispatched #> ✔ redcap_visits completed [574ms, 428 B] #> + redcap_labs dispatched #> ✔ redcap_labs completed [107ms, 477 B] #> + redcap_meta_db dispatched #> ✔ redcap_meta_db completed [87ms, 568 B] #> + redcap_demographics dispatched #> ✔ redcap_demographics completed [97ms, 623 B] #> + redcap_record_id dispatched #> ✔ redcap_record_id completed [0ms, 62 B] #> + n_enrolled dispatched #> ✔ n_enrolled completed [0ms, 48 B] #> ✔ ended pipeline [1.4s, 6 completed, 0 skipped]"},{"path":"https://overdodactyl.github.io/redcaptargets/index.html","id":"view-generated-targets","dir":"","previous_headings":"Example","what":"View generated targets","title":"Targets for REDCap Workflows","text":"instrument REDCap project target, along one metadata:","code":"manifest <- targets::tar_manifest() manifest[c(\"name\", \"description\")] #> # A tibble: 6 × 2 #>   name                description               #>   <chr>               <chr>                     #> 1 redcap_visits       REDCap Data: visits       #> 2 redcap_labs         REDCap Data: labs         #> 3 redcap_meta_db      REDCap Metadata           #> 4 redcap_demographics REDCap Data: demographics #> 5 redcap_record_id    REDCap Record ID          #> 6 n_enrolled          Enrollment Count"},{"path":"https://overdodactyl.github.io/redcaptargets/reference/fetch_redcap_instruments.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch REDCap instrument names from a project — fetch_redcap_instruments","title":"Fetch REDCap instrument names from a project — fetch_redcap_instruments","text":"Queries REDCap project list instruments (forms) returns data frame column name can used dynamic branching targets pipelines.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/fetch_redcap_instruments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch REDCap instrument names from a project — fetch_redcap_instruments","text":"","code":"fetch_redcap_instruments(con)"},{"path":"https://overdodactyl.github.io/redcaptargets/reference/fetch_redcap_instruments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch REDCap instrument names from a project — fetch_redcap_instruments","text":"con redcapAPI::redcapConnection object.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/fetch_redcap_instruments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch REDCap instrument names from a project — fetch_redcap_instruments","text":"data frame one column, name, containing instrument/form names.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/fetch_redcap_instruments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fetch REDCap instrument names from a project — fetch_redcap_instruments","text":"function used internally tar_redcap() determine instruments pull.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_fetch_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch records for one or more REDCap forms — redcap_fetch_records","title":"Fetch records for one or more REDCap forms — redcap_fetch_records","text":"default record-fetching function used tar_redcap(). uses redcapAPI::exportRecordsTyped() pull records given form set forms. Additional arguments can passed via ... (e.g., batch_size, drop_fields, labels).","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_fetch_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch records for one or more REDCap forms — redcap_fetch_records","text":"","code":"redcap_fetch_records(con, forms, ...)"},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_fetch_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch records for one or more REDCap forms — redcap_fetch_records","text":"con redcapAPI::redcapConnection object. forms character vector one REDCap form names. ... Additional arguments passed redcapAPI::exportRecordsTyped(), batch_size, labels, drop_fields.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_fetch_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch records for one or more REDCap forms — redcap_fetch_records","text":"data frame (tibble tibble package installed) containing REDCap records.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_instrument_force.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if REDCap instruments should be re-fetched — redcap_instrument_force","title":"Determine if REDCap instruments should be re-fetched — redcap_instrument_force","text":"Checks REDCap project logs relevant record-level changes since last pull specified instrument targets. used mode = \"logging\" conditionally trigger target invalidation based recent changes.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_instrument_force.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if REDCap instruments should be re-fetched — redcap_instrument_force","text":"","code":"redcap_instrument_force(names, con)"},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_instrument_force.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if REDCap instruments should be re-fetched — redcap_instrument_force","text":"names character vector REDCap target names (e.g., redcap_formA). Used determine recent run time corresponding target. con redcapAPI::redcapConnection object.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_instrument_force.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if REDCap instruments should be re-fetched — redcap_instrument_force","text":"logical scalar: TRUE REDCap logs suggest data may changed re-fetched; FALSE otherwise.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_meta_force.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine whether REDCap metadata should be refreshed based on logs — redcap_meta_force","title":"Determine whether REDCap metadata should be refreshed based on logs — redcap_meta_force","text":"Checks REDCap project logging changes metadata (excluding exports/downloads) since last time metadata target built.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_meta_force.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine whether REDCap metadata should be refreshed based on logs — redcap_meta_force","text":"","code":"redcap_meta_force(name, con)"},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_meta_force.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine whether REDCap metadata should be refreshed based on logs — redcap_meta_force","text":"name character vector target names corresponding REDCap metadata target(s). Typically form \"<stem>_meta_db\". con redcapAPI::redcapConnection object.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_meta_force.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine whether REDCap metadata should be refreshed based on logs — redcap_meta_force","text":"Logical: TRUE metadata changed since last pull target rebuilt, FALSE otherwise.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_meta_force.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine whether REDCap metadata should be refreshed based on logs — redcap_meta_force","text":"Used internally tar_redcap() mode = \"logging\" decide whether metadata target rerun.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_resolve_cues.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve target cue settings for REDCap targets — redcap_resolve_cues","title":"Resolve target cue settings for REDCap targets — redcap_resolve_cues","text":"Determines targets invalidated (re-run) based specified mode. Used internally tar_redcap() assign cue behavior metadata target instrument-level data targets.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_resolve_cues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve target cue settings for REDCap targets — redcap_resolve_cues","text":"","code":"redcap_resolve_cues(mode, name_meta, instrument_names, con)"},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_resolve_cues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve target cue settings for REDCap targets — redcap_resolve_cues","text":"mode character string indicating cue mode. One : \"logging\": use REDCap project logs detect changes. \"always\": always re-fetch data regardless changes. \"thorough\": use default targets metadata-based invalidation. \"never\": never re-run unless missing failed. name_meta Name metadata target (used check last run time). instrument_names character vector instrument target names. con redcapAPI::redcapConnection object.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/redcap_resolve_cues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve target cue settings for REDCap targets — redcap_resolve_cues","text":"named list meta inst cue objects use tar_target() tarchetypes::tar_map().","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/resolve_redcap_instruments.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and resolve REDCap instruments to pull — resolve_redcap_instruments","title":"Validate and resolve REDCap instruments to pull — resolve_redcap_instruments","text":"Ensures list instruments either NULL (case instruments fetched) valid character vector instrument names.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/resolve_redcap_instruments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and resolve REDCap instruments to pull — resolve_redcap_instruments","text":"","code":"resolve_redcap_instruments(instruments, con)"},{"path":"https://overdodactyl.github.io/redcaptargets/reference/resolve_redcap_instruments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and resolve REDCap instruments to pull — resolve_redcap_instruments","text":"instruments NULL character vector instrument names fetch. con redcapAPI::redcapConnection object.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/resolve_redcap_instruments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate and resolve REDCap instruments to pull — resolve_redcap_instruments","text":"data frame name column (structure fetch_redcap_instruments()).","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/tar_redcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create dynamic REDCap targets for a targets pipeline — tar_redcap","title":"Create dynamic REDCap targets for a targets pipeline — tar_redcap","text":"tar_redcap() builds set dynamic targets pull REDCap metadata form-level data using redcapAPI backend. supports dynamic branching across instruments offers flexible control data re-fetched via cue behavior (e.g., logging-based updates, always re-fetching, never rerunning unless missing).","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/tar_redcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create dynamic REDCap targets for a targets pipeline — tar_redcap","text":"","code":"tar_redcap(   name,   con,   mode = c(\"logging\", \"always\", \"thorough\", \"never\"),   fetch_records = redcap_fetch_records,   instruments = NULL,   ... )"},{"path":"https://overdodactyl.github.io/redcaptargets/reference/tar_redcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create dynamic REDCap targets for a targets pipeline — tar_redcap","text":"name Symbol. name stem REDCap targets (e.g., redcap generate redcap_meta_db one target per instrument prefixed redcap_). con redcapAPI::redcapConnection object. mode Character string indicating target invalidation occur: \"logging\": re-run REDCap logs show changes (requires user access logs). \"always\": always re-run REDCap pulls regardless changes. \"thorough\": default targets invalidation (based dependencies metadata). \"never\": never re-run unless missing errored previously. fetch_records function used fetch records REDCap form. Must accept arguments con forms, along additional optional arguments via .... Defaults redcap_fetch_records(). instruments Optional character vector instrument (form) names fetch REDCap. NULL (default), available instruments fetched using fetch_redcap_instruments(). supplied, values must valid instrument names present REDCap project. allows selective fetching subset forms. ... Additional arguments passed fetch_records, batch_size, drop_fields, label formatting options.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/tar_redcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create dynamic REDCap targets for a targets pipeline — tar_redcap","text":"list tar_target() tar_map() objects, including: <name>_meta_db: target REDCap metadata. One dynamic target per REDCap instrument, named <name>_<instrument>.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/tar_redcap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create dynamic REDCap targets for a targets pipeline — tar_redcap","text":"","code":"if (FALSE) { # \\dontrun{ tar_redcap(   name = redcap,   con = redcap_con,   mode = \"logging\",   batch_size = 1000 )  # Custom record fetcher example: custom_fetch <- function(con, forms, ...) {   redcapAPI::exportRecords(con, forms = forms, labels = TRUE, ...) }  tar_redcap(   name = redcap,   con = redcap_con,   mode = \"always\",   fetch_records = custom_fetch ) } # }"},{"path":"https://overdodactyl.github.io/redcaptargets/reference/try_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a data object to a tibble if tibble is installed — try_tibble","title":"Convert a data object to a tibble if tibble is installed — try_tibble","text":"lightweight helper attempts coerce .data tibble using tibble::as_tibble()—tibble package installed. Otherwise, silently returns input unmodified.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/try_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a data object to a tibble if tibble is installed — try_tibble","text":"","code":"try_tibble(.data)"},{"path":"https://overdodactyl.github.io/redcaptargets/reference/try_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a data object to a tibble if tibble is installed — try_tibble","text":".data data frame–like object.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/try_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a data object to a tibble if tibble is installed — try_tibble","text":"tibble (tibble installed) original object.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/try_tibble.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a data object to a tibble if tibble is installed — try_tibble","text":"useful optional tibble formatting without forcing tibble hard dependency package.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/validate_fetch_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate that the fetch_records function has required arguments — validate_fetch_records","title":"Validate that the fetch_records function has required arguments — validate_fetch_records","text":"Ensures user-supplied fetch_records function includes required arguments con forms. Helps avoid runtime errors dynamic targets call function inside tar_redcap().","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/validate_fetch_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate that the fetch_records function has required arguments — validate_fetch_records","text":"","code":"validate_fetch_records(fetch_records)"},{"path":"https://overdodactyl.github.io/redcaptargets/reference/validate_fetch_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate that the fetch_records function has required arguments — validate_fetch_records","text":"fetch_records function meant passed fetch_records argument tar_redcap(). must accept least con forms.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/validate_fetch_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate that the fetch_records function has required arguments — validate_fetch_records","text":"Invisibly returns TRUE validation passes; otherwise informative error thrown.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/validate_redcap_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate REDCap connection object — validate_redcap_connection","title":"Validate REDCap connection object — validate_redcap_connection","text":"Ensures object redcapAPI connection.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/reference/validate_redcap_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate REDCap connection object — validate_redcap_connection","text":"","code":"validate_redcap_connection(con)"},{"path":"https://overdodactyl.github.io/redcaptargets/reference/validate_redcap_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate REDCap connection object — validate_redcap_connection","text":"con Object validate.","code":""},{"path":"https://overdodactyl.github.io/redcaptargets/news/index.html","id":"redcaptargets-001","dir":"Changelog","previous_headings":"","what":"redcaptargets 0.0.1","title":"redcaptargets 0.0.1","text":"Initial development release redcaptargets. Integrates REDCap projects targets pipeline framework using redcapAPI. Automatically generates targets REDCap instrument project metadata. Supports smart invalidation re-pulling REDCap data using REDCap logging. Includes tar_redcap(), main factory function dynamic REDCap pipelines.","code":""}]
